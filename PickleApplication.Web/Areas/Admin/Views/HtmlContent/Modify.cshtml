@model PickleApplication.BusinessLayer.Models.Content

@{
    ViewBag.Title = "Modify";
}

<section class="content">
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">@(Model != null && Model.ContentId > 0 ? "İçerik Güncelle" : "İçerik Ekle")</h3>
        </div>
        @using (Html.BeginForm("Modify", "HtmlContent", FormMethod.Post))
        {
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        @if (Model != null && Model.ContentId > 0)
                        {
                            @Html.HiddenFor(h => h.ContentId)
                        }
                        <div class="form-group">
                            <label>Başlık</label>
                            @Html.TextBoxFor(h => h.ContentTitle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(h => h.ContentTitle)
                        </div>
                        <div class="form-group">
                            <label>Aktif</label><br />
                            @Html.CheckBoxFor(h => h.ContentIsActive, new { @class = "flat-red", type = "checkbox" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Url</label>
                            @Html.TextBoxFor(h => h.ContentUrl, new { @class = "form-control" })
                            @Html.ValidationMessageFor(h => h.ContentUrl)
                        </div>
                        <div class="form-group">
                            <label>Content</label>
                            @Html.DropDownListFor(h => h.Link.LinkId, new SelectList(ViewBag.Links, "Key", "Value"), "None", new { @class = "form-control" })
                            @Html.ValidationMessageFor(h => h.Link.LinkId)
                        </div>
                    </div>
                </div>
                @Html.TextAreaFor(h => h.ContentEditorText, new { @class = "textarea", placeholder = "Place some text here" })
            </div>
            <div class="box-footer">
                <input type="submit" class="btn btn-primary" value="@(Model != null && Model.ContentId > 0 ? "Güncelle" : "Ekle")" />
            </div>
        }
    </div>
</section>

@if (ViewBag.CreateStatus != null)
{
    <div class="alert alert-@(ViewBag.CreateStatus ? "success" : "danger") alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h4><i class="icon fa  @(ViewBag.CreateStatus ? "fa-check" : "fa-ban")"></i> @(ViewBag.CreateStatus ? "Başarılı" : "Hata!")</h4>
        @(ViewBag.CreateStatus ? "Content oluşturma işlemi başarılı bir şekilde gerçekleşmiştir." : "Content oluşturma sırasında bir hata oluştu.")
    </div>
}

@if (ViewBag.UpdateStatus != null)
{
    <div class="alert alert-@(ViewBag.UpdateStatus ? "success" : "danger") alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h4><i class="icon fa  @(ViewBag.UpdateStatus ? "fa-check" : "fa-ban")"></i> @(ViewBag.UpdateStatus ? "Başarılı" : "Hata!")</h4>
        @(ViewBag.UpdateStatus ? "Content güncelleme işlemi başarılı bir şekilde gerçekleşmiştir." : "Content güncelleme sırasında bir hata oluştu.")
    </div>
}

@section styles{

}

@section scripts{
    <script src="~/Areas/Admin/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        ClassicEditor
            .create(document.querySelector('.textarea'), {
                // toolbar: [ 'heading', '|', 'bold', 'italic', 'link' ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(err => {
                console.error(err.stack);
            });

    </script>
}
