@model PickleApplication.BusinessLayer.Models.Product
@{
    ViewBag.Title = "Modify";
}

<section class="content">
    <div class="box box-default">
        <div class="box-header with-border">
            <h3 class="box-title">@(Model != null && Model.ProductId > 0 ? "Ürün Güncelle" : "Yeni Ürün")</h3>
        </div>
        @using (Html.BeginForm("Modify", "AdmProduct", FormMethod.Post))
        {
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        @if (Model != null && Model.ProductId > 0)
                        {
                            @Html.HiddenFor(p => p.ProductId)
                        }
                        @Html.HiddenFor(p => p.ProductCode)
                        <div class="form-group">
                            <label>Ürün Adı</label>
                            @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control", type = "text" })
                            @Html.ValidationMessageFor(p => p.ProductName)
                        </div>
                        <div class="form-group">
                            <label>Başlık</label>
                            @Html.TextBoxFor(p => p.Title, new { @class = "form-control", type = "text" })
                            @Html.ValidationMessageFor(p => p.Title)
                        </div>
                        <div class="form-group">
                            <label>Açıklama</label>
                            @Html.TextBoxFor(p => p.Description, new { @class = "form-control", type = "text" })
                            @Html.ValidationMessageFor(p => p.Description)
                        </div>
                        <div class="form-group">
                            <label>Kategori</label>
                            @Html.DropDownListFor(p => p.Link.LinkId, new SelectList(ViewBag.Categories, "Key", "Value"), "Selected", new { @class = "form-control" })
                            @Html.ValidationMessageFor(p => p.Link.LinkId)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Stok</label>
                            @Html.TextBoxFor(p => p.Stock, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(p => p.Stock)
                        </div>
                        <div class="form-group">
                            <label>Birim Fiyatı</label>
                            @Html.TextBoxFor(p => p.UnitPrice, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(p => p.UnitPrice)
                        </div>
                        <div class="form-group">
                            <label>Puan</label>
                            @Html.TextBoxFor(p => p.Star, new { @class = "form-control", type = "number" })
                            @Html.ValidationMessageFor(p => p.Star)
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer">
                <input type="submit" class="btn btn-primary" value="@(Model != null && Model.ProductId > 0 ? "Güncelle" : "Ekle")" />
            </div>
        }
    </div>
</section>

@if (ViewBag.CreateStatus != null)
{
    <div class="alert alert-@(ViewBag.CreateStatus ? "success" : "danger") alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h4><i class="icon fa @(ViewBag.CreateStatus ? "fa-check" : "fa-ban")"></i> @(ViewBag.CreateStatus ? "Başarılı" : "Hata!")</h4>
        @(ViewBag.CreateStatus ? "Ürün oluşturma işlemi başarılı bir şekilde gerçekleşmiştir." : "Ürün oluşturma sırasında bir hata oluştu.")
    </div>
}

@if (ViewBag.UpdateStatus != null)
{
    <div class="alert alert-@(ViewBag.UpdateStatus ? "success" : "danger") alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h4><i class="icon fa @(ViewBag.CreateStatus ? "fa-check" : "fa-ban")"></i> @(ViewBag.UpdateStatus ? "Başarılı" : "Hata!")</h4>
        @(ViewBag.UpdateStatus ? "Ürün güncelleme işlemi başarılı bir şekilde gerçekleşmiştir." : "Ürün güncelleme sırasında bir hata oluştu.")
    </div>
}